use tracing::{info, Level};
use tracing_subscriber::FmtSubscriber;

// MÃ³dulos do projeto
mod traits;
mod models;
mod services;
mod handlers;
mod config;
mod cache;
mod errors;

#[tokio::main]
async fn main() {
    // Configurar logging
    let subscriber = FmtSubscriber::builder()
        .with_max_level(Level::INFO)
        .finish();
    tracing::subscriber::set_global_default(subscriber)
        .expect("Setting default subscriber failed");

    info!("ðŸ¦€ Rider Finance Backend RS - Iniciando...");

    // TODO: Implementar servidor Axum
    info!("âœ… Traits fundamentais carregadas:");
    info!("   - ICrudable: OperaÃ§Ãµes CRUD bÃ¡sicas");
    info!("   - IQuerable: Consultas avanÃ§adas com filtros e paginaÃ§Ã£o");
    info!("   - ICacheable: Cache inteligente com Sled");
    
    info!("ðŸš€ Backend Rust pronto para implementaÃ§Ã£o!");
}
